generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int                 @id @default(autoincrement())
  email               String?             @unique
  name                String?
  number              String              @unique
  password            String
  OnRampTransaction   OnRampTransaction[]
  Balance             Balance[]
  sendTransaction     P2pTranaction[]     @relation(name: "Sender")
  receiveTransaction  P2pTranaction[]     @relation(name: "Receiver")
}

model Merchant {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  auth_type AuthType
}

model OnRampTransaction {
  id        Int          @id @default(autoincrement())
  status    OnRampStatus
  token     String       @unique
  provider  String
  amount    Int
  startTime DateTime
  userId    Int
  user      User         @relation(fields: [userId], references: [id])
}

model P2pTranaction {
  id          Int        @id @default(autoincrement())
  senderId    Int 
  sender      User       @relation(name: "Sender", fields: [senderId], references: [id])
  receiverId  Int
  receiver    User       @relation(name: "Receiver", fields: [receiverId], references: [id])
  startTime   DateTime   @default(now())
  amount      Int
}

model Balance {
  id     Int  @id @default(autoincrement())
  userId Int  @unique
  amount Int
  locked Int
  user   User @relation(fields: [userId], references: [id])
}

enum AuthType {
  Google
  Github
}

enum OnRampStatus {
  Success
  Failure
  Processing
}
